// Test generated by RoostGPT for test ReactTest1 using AI Type Open AI and AI Model gpt-4-1106-preview

import reportWebVitals from './reportWebVitals';

// Mock the web-vitals module
jest.mock('web-vitals', () => ({
  getCLS: jest.fn(),
  getFID: jest.fn(),
  getFCP: jest.fn(),
  getLCP: jest.fn(),
  getTTFB: jest.fn(),
}));

describe('reportWebVitals', () => {
  beforeEach(() => {
    // Clear all mock function calls before each test
    jest.clearAllMocks();
  });

  test('does not call any web vital functions when onPerfEntry is not provided', () => {
    // Arrange & Act
    reportWebVitals(undefined);

    // Assert
    expect(getCLS).not.toHaveBeenCalled();
    expect(getFID).not.toHaveBeenCalled();
    expect(getFCP).not.toHaveBeenCalled();
    expect(getLCP).not.toHaveBeenCalled();
    expect(getTTFB).not.toHaveBeenCalled();
  });

  test('calls onPerfEntry with web vital results when it is a function', async () => {
    // Arrange
    const onPerfEntry = jest.fn();
    const { getCLS, getFID, getFCP, getLCP, getTTFB } = require('web-vitals');

    // Act
    reportWebVitals(onPerfEntry);
    // Simulate resolving all the web vitals promises
    await Promise.resolve();

    // Assert
    expect(onPerfEntry).toHaveBeenCalled();
    expect(getCLS).toHaveBeenCalledWith(onPerfEntry);
    expect(getFID).toHaveBeenCalledWith(onPerfEntry);
    expect(getFCP).toHaveBeenCalledWith(onPerfEntry);
    expect(getLCP).toHaveBeenCalledWith(onPerfEntry);
    expect(getTTFB).toHaveBeenCalledWith(onPerfEntry);
  });
});

