# Test generated by RoostGPT for test PostTest using AI Type Azure Open AI and AI Model roost-gpt4-32k


# Test generated for /registrations/{id}_patch for http method type PATCH in artillery framework

# RoostTestHash=3512d7d6f0


config:
  target: "{{ $processEnvironment.API_HOST }}"
  processor: "./my-processor.js"
  plugins:
    expect: {}
  environments:
    development:
      target: "{{ $processEnvironment.API_HOST }}"
      payload:
        path: "payloads/registrations_id_patch_others.csv"
        fields:
          - "id"
        skipHeader: true
    ensure:
      maxErrorRate: 0
  phases:
    - duration: 60
      arrivalRate: 10

scenarios:
  - name: "Test scenario - Testing various non-successful API requests for /registrations/{id} endpoint"
    flow:
      # Test Case: Unauthorized Access (No Authorization Header case)
      - get:
          url: "/registrations/{{ id }}"
          expect:
            - statusCode: 401
          think: 1

      # Test Case: Unauthorized Access (Invalid Token case)
      - get:
          url: "/registrations/{{ id }}"
          headers:
            Token: "InvalidToken"
          expect:
            - statusCode: 401
          think: 1

      # Test Case : Invalid ID Parameter case - Empty ID
      - get:
          url: "/registrations/"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 400
          think: 1

      # Test Case : Invalid ID Parameter case - Not a UUID
      - get:
          url: "/registrations/123456"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 400
          think: 1

      # Test Case : Non-Existent ID
      - get:
          url: "/registrations/550e8400-e29b-41d4-a716-446655440000"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404
          think: 1

      # Test Case : Invalid URL
      - get:
          url: "/invalid-url/{{ id }}"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404
          think: 1
