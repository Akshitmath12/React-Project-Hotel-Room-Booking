// Test generated by RoostGPT for test ReactTest1 using AI Type Open AI and AI Model gpt-4-1106-preview

import React from 'react';
import { MemoryRouter } from 'react-router-dom'; // We'll use MemoryRouter to mock routing context
import { render, cleanup } from '@testing-library/react';
import Room from '../../../src/Pages/Room'; // Adjust the relative path accordingly
import '@testing-library/jest-dom/extend-expect';

// Mock the child components since we're not testing them here
jest.mock('../../../src/Components/Hero/Hero', () => () => <div>MockHero</div>);
jest.mock('../../../src/Components/Banner/Banner', () => () => <div>MockBanner</div>);
jest.mock('../../../src/Components/RoomsContainer/RoomsContainer', () => () => <div>MockRoomContainer</div>);

describe('Room component', () => {
  afterEach(cleanup);

  test('renders without crashing', () => {
    render(
      <MemoryRouter>
        <Room />
      </MemoryRouter>
    );
  });

  test('contains a link to the home page', () => {
    const { getByText } = render(
      <MemoryRouter>
        <Room />
      </MemoryRouter>
    );
    expect(getByText('return home')).toBeInTheDocument();
  });

  test('renders the Hero, Banner, and RoomContainer components', () => {
    const { getByText } = render(
      <MemoryRouter>
        <Room />
      </MemoryRouter>
    );
    expect(getByText('MockHero')).toBeInTheDocument();
    expect(getByText('MockBanner')).toBeInTheDocument();
    expect(getByText('MockRoomContainer')).toBeInTheDocument();
  });
});

